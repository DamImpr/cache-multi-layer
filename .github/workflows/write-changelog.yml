on:
  push:
    branches:
      - main  # Triggera il workflow su ogni push sul branch 'main'

jobs:
  release:
    # Richiede i permessi di scrittura sul contenuto per poter creare tag, commit e release
    permissions:
      contents: write
      pull-requests: write # Utile se l'azione gestisce anche le PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del Codice
        uses: actions/checkout@v4
        with:
          # Fetch della cronologia completa per l'analisi dei commit
          fetch-depth: 0 
          
      - name: Configurazione Utente Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Esecuzione di Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          # Genera il changelog e determina il nuovo numero di versione
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-tag: true              # Crea un tag con la nuova versione
          output-file: CHANGELOG.md  # Aggiorna il file CHANGELOG.md
          skip-unstable: true        # Non rilascia versioni con 'alpha', 'beta', ecc.
          
      - name: Verifica se è stata creata una nuova versione
        id: check_version
        run: echo "NEW_VERSION_TAG=${{ steps.changelog.outputs.tag }}" >> $GITHUB_ENV
        # L'output 'tag' sarà vuoto se non c'è una nuova release

      - name: Push del CHANGELOG e del Tag
        if: env.NEW_VERSION_TAG != '' # Esegue solo se una nuova versione è stata creata
        run: |
          git add CHANGELOG.md
          git commit -m "chore(release): ${{ env.NEW_VERSION_TAG }}" || echo "Nessun cambiamento al CHANGELOG da committare"
          git push
          git push origin ${{ env.NEW_VERSION_TAG }}

      - name: Crea GitHub Release
        if: env.NEW_VERSION_TAG != ''
        uses: softprops/action-gh-release@v1
        with:
          # Usa il body del changelog generato come note di rilascio
          body: ${{ steps.changelog.outputs.clean_changelog }}
          tag_name: ${{ steps.changelog.outputs.tag }}
          name: Release ${{ steps.changelog.outputs.tag }}
          draft: false             # Pubblica immediatamente la release
          prerelease: false        # Non contrassegna come pre-release
