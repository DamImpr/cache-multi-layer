name: Update Changelog on merge to main (append)

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Determine source PR (if any)
        id: prinfo
        run: |
          # Try to find the pull request that was merged into this push (if the push is a merge commit)
          # Look for PRs whose merge_commit_sha matches HEAD
          head_sha=$(git rev-parse HEAD)
          pr_number=$(gh api repos/${{ github.repository }}/commits/${head_sha}/pulls --jq '.[0].number' 2>/dev/null || true)
          if [ -z "$pr_number" ]; then
            # fallback: try to find PR by searching merged PRs with HEAD in merge_commit_sha via REST
            pr_number=$(gh api repos/${{ github.repository }}/pulls --jq '.[] | select(.merge_commit_sha == env.HEAD_SHA) | .number' --paginate 2>/dev/null || true)
          fi
          echo "head_sha=$head_sha" >> "$GITHUB_OUTPUT"
          echo "pr_number=${pr_number:-}" >> "$GITHUB_OUTPUT"

      - name: Gather PR info (if found) or use last commit message
        id: info
        run: |
          pr_number="${{ steps.prinfo.outputs.pr_number }}"
          if [ -n "$pr_number" ]; then
            pr_json=$(gh api repos/${{ github.repository }}/pulls/$pr_number)
            pr_title=$(printf '%s' "$pr_json" | jq -r .title)
            pr_user_login=$(printf '%s' "$pr_json" | jq -r .user.login)
            pr_html_url=$(printf '%s' "$pr_json" | jq -r .html_url)
            created_at=$(printf '%s' "$pr_json" | jq -r .created_at)
          else
            # No PR found: use last commit info
            pr_title=$(git log -1 --pretty=%s)
            pr_user_login=$(git log -1 --pretty=%an)
            pr_html_url=""
            created_at=$(git log -1 --pretty=%cI)
          fi
          echo "pr_number=${pr_number:-}" >> "$GITHUB_OUTPUT"
          echo "pr_title=$pr_title" >> "$GITHUB_OUTPUT"
          echo "pr_user_login=$pr_user_login" >> "$GITHUB_OUTPUT"
          echo "pr_html_url=$pr_html_url" >> "$GITHUB_OUTPUT"
          echo "created_at=$created_at" >> "$GITHUB_OUTPUT"

      - name: Format changelog entry
        id: entry
        run: |
          date_iso="${{ steps.info.outputs.created_at }}"
          if date -d "$date_iso" +"%Y-%m-%d" >/dev/null 2>&1; then
            date_short=$(date -u -d "$date_iso" +"%Y-%m-%d")
          else
            date_short=$(date -u +"%Y-%m-%d")
          fi
          author="${{ steps.info.outputs.pr_user_login }}"
          title="${{ steps.info.outputs.pr_title }}"
          pr_url="${{ steps.info.outputs.pr_html_url }}"
          pr_number="${{ steps.info.outputs.pr_number }}"
          safe_title=$(printf '%s' "$title" | sed 's/|/\\|/g')
          safe_author=$(printf '%s' "$author" | sed 's/|/\\|/g')
          if [ -n "$pr_number" ]; then
            entry="- [${date_short}] ${safe_author}: ${safe_title} [#${pr_number}](${pr_url})"
          else
            entry="- [${date_short}] ${safe_author}: ${safe_title}"
          fi
          echo "$entry" > changelog_entry.txt
          echo "changelog_entry_path=changelog_entry.txt" >> "$GITHUB_OUTPUT"

      - name: Append entry to CHANGELOG.md
        run: |
          changelog_file=CHANGELOG.md
          mkdir -p "$(dirname "$changelog_file")"
          if [ ! -f "$changelog_file" ]; then
            echo "# Changelog" > "$changelog_file"
            echo "" >> "$changelog_file"
          fi
          entry=$(cat "${{ steps.entry.outputs.changelog_entry_path }}")
          # Ensure there is a header; append entry at the end of file separated by a blank line
          printf "%s\n\n" "$entry" >> "$changelog_file"

      - name: Commit and push changelog to main
        env:
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: actions@github.com
        run: |
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          git add CHANGELOG.md
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          commit_msg="chore: append CHANGELOG entry for merge ${GITHUB_SHA::7}"
          git commit -m "$commit_msg"
          git push origin main
