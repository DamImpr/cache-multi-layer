name: Update Changelog on PR (write to PR branch)

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  update-changelog:
    if: >
      github.event.pull_request.merged != true &&
      github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Gather PR info
        id: info
        run: |
          pr_number=$(jq -r .pull_request.number "$GITHUB_EVENT_PATH")
          pr_title=$(jq -r .pull_request.title "$GITHUB_EVENT_PATH")
          pr_user_login=$(jq -r .pull_request.user.login "$GITHUB_EVENT_PATH")
          pr_html_url=$(jq -r .pull_request.html_url "$GITHUB_EVENT_PATH")
          created_at=$(jq -r .pull_request.created_at "$GITHUB_EVENT_PATH")
          echo "pr_number=$pr_number" >> "$GITHUB_OUTPUT"
          echo "pr_title=$pr_title" >> "$GITHUB_OUTPUT"
          echo "pr_user_login=$pr_user_login" >> "$GITHUB_OUTPUT"
          echo "pr_html_url=$pr_html_url" >> "$GITHUB_OUTPUT"
          echo "created_at=$created_at" >> "$GITHUB_OUTPUT"

      - name: Format changelog entry
        id: entry
        run: |
          date_iso="${{ steps.info.outputs.created_at }}"
          if date -d "$date_iso" +"%Y-%m-%d" >/dev/null 2>&1; then
            date_short=$(date -u -d "$date_iso" +"%Y-%m-%d")
          else
            date_short=$(date -u +"%Y-%m-%d")
          fi
          author="${{ steps.info.outputs.pr_user_login }}"
          title="${{ steps.info.outputs.pr_title }}"
          pr_url="${{ steps.info.outputs.pr_html_url }}"
          pr_number="${{ steps.info.outputs.pr_number }}"
          safe_title=$(printf '%s' "$title" | sed 's/|/\\|/g')
          safe_author=$(printf '%s' "$author" | sed 's/|/\\|/g')
          entry="### ${date_short} â€” ${safe_title}\n\n- **Autore:** ${safe_author}\n- **PR:** [#${pr_number}](${pr_url})\n"
          echo "$entry" > changelog_entry.txt
          echo "changelog_entry_path=changelog_entry.txt" >> "$GITHUB_OUTPUT"

      - name: Prepend entry to CHANGELOG.md
        run: |
          changelog_file=CHANGELOG.md
          mkdir -p "$(dirname "$changelog_file")"
          if [ ! -f "$changelog_file" ]; then
            echo "# Changelog" > "$changelog_file"
            echo "" >> "$changelog_file"
          fi
          entry=$(cat "${{ steps.entry.outputs.changelog_entry_path }}")
          first_line=$(head -n1 "$changelog_file" || true)
          if [ "$first_line" = "# Changelog" ]; then
            rest=$(tail -n +2 "$changelog_file")
            rest=$(printf "%s\n" "$rest" | sed '1{/^$/d;}')
            printf "%s  %s %s " "# Changelog" "$entry" "$rest" > "$changelog_file"
          else
            printf "%s  %s " "$entry" "$(cat "$changelog_file")" > "$changelog_file"
          fi

      - name: Commit and push changelog to PR branch
        env:
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: actions@github.com
        run: |
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          git add CHANGELOG.md
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          commit_msg="chore: update CHANGELOG for PR #${{ steps.info.outputs.pr_number }}"
          git commit -m "$commit_msg"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}
